# -*- coding: utf-8 -*-
"""Program2_8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gVEWX4z6VosG4GmyA9cbwqOSaAqqX23V
"""

from google.colab import drive
drive.mount('/content/gdrive')

import pandas as pd
pd.set_option('display.max_colwidth', -1)
import numpy as np
pd.options.display.max_columns = 100
from sklearn.preprocessing import StandardScaler
import time
from sklearn.model_selection import train_test_split

df = pd.read_csv('/content/gdrive/My Drive/Program2/train.dat',header=None,sep=' ')
df1 = pd.read_csv('/content/gdrive/My Drive/Program2/train.labels',header=None)
df2=  pd.read_csv('/content/gdrive/My Drive/Program2/test.dat',header=None,sep=' ')

X = df.iloc[:,:].values
y = df1.iloc[:,:].values
test=df2.iloc[:,:].values

from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import SelectFromModel

from sklearn.preprocessing import StandardScaler
# standardise the data
X_std = StandardScaler().fit_transform(X)
test_std=StandardScaler().fit_transform(test)

y=y.ravel()

clf = RandomForestClassifier(n_estimators=100,class_weight="balanced", max_features='sqrt')
clf = clf.fit(X_std,y)

features = pd.DataFrame()
features['feature'] = df.columns
features['importance'] = clf.feature_importances_
features.sort_values(by=['importance'], ascending=True, inplace=True)
features.set_index('feature', inplace=True)

model = SelectFromModel(clf, prefit=True)
X_reduced = model.transform(X_std)
print(X_reduced.shape)

test_reduced = model.transform(test_std)
print(test_reduced.shape)

clf = RandomForestClassifier(n_estimators=150,max_features=21,class_weight="balanced")
clf = clf.fit(X_reduced,y)

y_pred = clf.predict(test_reduced)

with open('format9.dat','w') as filehandle:
    for listitem in y_pred:
        filehandle.write('%d\n' % listitem)

